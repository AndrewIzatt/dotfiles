# COLORS
# set -g default-terminal "screen-256color"
# or is it screen-256-color"? Need to get back to.
# PREFIX SETTINGS
# Unbind previous bindings
unbind C-b
unbind x
unbind-key -T copy-mode-vi v

# Choose either of these
# set -g prefix C-a
set -g prefix C-space

# Pass the prefix keystrokes through to program inside tmux
# Choose either of these
# bind C-a send-prefix
# turned this off, re-enable if it causes problems but I don't think it should since I have C-space as prefix.
# bind C-space send-prefix

# Jump to last window you were just in so you
# don't have to remember identifier of window
# bind-key a last-window

# BASE INDEX
# Start counting like people instead of programmers
set -g base-index 1
set-window-option -g pane-base-index 1

# Automatic window renumbering
set-option -g renumber-window on

#Prevent window renaming trigger
set-option -g allow-rename off

# Increase tmux messages display duration from 750ms to 1s
set -g display-time 1000

# Note: check tmux-sensible plugin settings for more setting changes

# Reload Tmux Conf
# When you bind a key like 'R' all by itself, what you're actually
# binding is <prefix> (or <C-a> or <C-b>) r
# In this case we're telling tmux to reload your config file and then
# tell us that it has succeeded.
bind R source-file ~/.config/tmux/tmux.conf \; display "config file loaded."

set -gq allow-passthrough on

# pane destruction
# Kill a pane
bind x kill-pane
# kill entire session
bind X kill-session

# Key bindings (From tmux-pain-control plugin)
# Navigation
# select pane on the left
# prefix + h and prefix + C-h
# select pane below the current one
# prefix + j and prefix + C-j
# select pane above
# prefix + k and prefix + C-k
# select pane on the right
# prefix + l and prefix + C-l

# Note: This overrides tmux's default binding for toggling between last active windows, 
# prefix + l. tmux-sensible gives you a better binding for that, prefix + a (if your prefix is C-a).
# Splitting Panes
# Newly created pane always has the same path as the original pane.
# split the current pane into two, left and right.
# prefix + |
# split the current pane into two, top and bottom.
# prefix + -
# split current pane full width into two, left and right.
# prefix + \
# split current pane full height into two, top and bottom.
# prefix + _
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# Resize panes
# These mappings are repeatable.
# The amount of cells to resize can be configured with @pane_resize option.
# See configuration section for the details.
# resize current pane 5 cells to the left
# prefix + shift + h
# resize 5 cells in the down direction
# prefix + shift + j
# resize 5 cells in the up direction
# prefix + shift + k
# resize 5 cells to the right
# prefix + shift + l

# Swapping windows
# prefix + < - moves current window one position to the left
# prefix + > - moves current window one position to the right

# If we enter the command prompt
# and type some tmux commands,
# we can press <Esc> and then use
# some basic vi style motions
# such as w, e, b to move around,
# and i to start typing again
# set-option -g status-keys vi

# COPY MODE (prefix [)
# Set vi mode for keys
set-window-option -g mode-keys vi
# Begin selection in copy mode.  
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle

# Yank selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Save a copy of the current pane to ~/buffer.txt
# The syntax we used here binds <prefix> <ctrl>s to our new command.
# The extra <ctrl> keeps this rarely-used command from taking up a
# spot that could be used by something more, you know, useful, and
# ensures that when we tell tmux to save a screen shot we mean it.
# unbind t
# bind t run "tmux capture-pane && tmux save-buffer /home/orca/buffer.txt"

# Choose a buffer and paste the contents
bind C-c run "tmux choose-buffer"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
# See tmux-pain-control page for shortcuts
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'egel/tmux-gruvbox'
set -g @plugin 'Freed-Wu/tmux-digit'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
