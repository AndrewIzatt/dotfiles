# COLORS
# set -g default-terminal "screen-256color"
# or is it screen-256-color"? Need to get back to.

# PREFIX SETTINGS
# Unbind previous bindings
unbind C-b
unbind x

# Choose either of these
# set -g prefix C-a
set -g prefix C-space

# Pass the prefex keystrokes through to program inside tmux
# Choose either of these
# bind C-a send-prefix
bind C-space send-prefix

# Jump to last window you were just in so you
# don't have to remember identifier of window
bind-key L last-window

# BASE INDEX
# Start counting like people instead of programmers
set -g base-index 1
set-window-option -g pane-base-index 1

# Automatic window renumbering
set-option -g renumber-window on

#Prevent window renaming trigger
set-option -g allow-rename off

# Increase scroll back
set -g history-limit 3000

#ESCAPE TIME
# set -s escape-time 1
# Setting escape-time to 0
# allows <Esc> to be triggered
# immediately and won't wait to make sure
# <Esc> is part of another sequence of commands
set -s escape-time 0

#Enable UTF8
set-window-option -g utf8 on
set -g status on
set -g status-utf8 on

# CONFIGURE STATUS BAR
set -g status-right '#[fg=colour234,bg=white,nobold,nounderscore,noitalics]image#[fg=colour250,bg=colour234] %a #[fg=colour247,bg=colour234]image#[fg=colour247,bg=colour234] %b %d image %R #[fg=colour252,bg=colour234,nobold,nounderscore,noitalics]#[fg=red,bg=colour234]image#[fg=white,bg=red] #H'
set -g status-bg white
set -g status-justify 'left'
set -g pane-border-fg white
set -g pane-active-border-fg red
set -g message-bg red
set -g message-fg white
setw -g window-status-separator '  '
setw -g window-status-current-format '#[fg=colour231,bg=colour31,bold] #I image #W #[fg=colour31,bg=white,nobold,nounderscore,noitalics]image'

# Key bindings and commands

# Reload Tmux Conf
# When you bind a key like 'r' all by itself, what you're actually
# binding is <prefix> (or <C-a> or <C-b>) r
# In this case we're telling tmux to reload your config file and then
# tell us that it has succeeded.
bind r source-file ~/.tmux.conf \; display "config file loaded."

#Pane Creation
## Remap splitting pane vertically
bind v split-window -h

# Remap splitting pane horizontally
bind s split-window -v

#PANE DESTRUCTION
# Kill a pane
bind x kill-pane
# kill entire session
bind X kill-session

#PANE NAVIGATION
# Navigate Panes Vim style
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# Resize panes
# Increase pane left by five columns
bind-key -r < resize-pane -L 5
# Increase pane right by five columns
bind-key -r > resize-pane -R 5
# Increase horizontal pane height by five rows
bind-key -r + resize-pane -U 5
# Decrease the horizontal pane height by five columns
bind-key -r - resize-pane -D 5
bind-key = select-layout even-vertical
bind-key | select-layout even-horizontal

# If we enter the command prompt
# and type some tmux commands,
# we can press <Esc> and then use
# some basic vi style motions
# such as w, e, b to move around,
# and i to start typing again
set-option -g status-keys vi

# COPY MODE
# Set vi mode for keys
set-window-option -g mode-keys vi

# Save a copy of the current pane to ~/buffer.txt
# The syntax we used here binds <prefix> <ctrl>s to our new command.
# The extra <ctrl> keeps this rarely-used command from taking up a
# spot that could be used by something more, you know, useful, and
# ensures that when we tell tmux to save a screen shot we mean it.
bind C-s run "tmux capture-pane && tmux save-buffer /home/orca/buffer.txt"

# Choose a buffer and paste the contents
bind C-c run "tmux choose-buffer"


